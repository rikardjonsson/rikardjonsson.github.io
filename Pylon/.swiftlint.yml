# SwiftLint Configuration for Pylon
# Swift 6.0 macOS productivity dashboard

# Paths to include in linting
included:
  - Sources
  - Pylon
  - Tests
  - PylonTests

# Paths to exclude from linting
excluded:
  - .build
  - DerivedData
  - docs
  - scripts
  - .github

# Enable all rules by default and then disable specific ones
only_rules:
  # Style Rules
  - array_init
  - attributes
  - block_based_kvo
  - class_delegate_protocol
  - closing_brace
  - closure_body_length
  - closure_end_indentation
  - closure_parameter_position
  - closure_spacing
  - collection_alignment
  - colon
  - comma
  - compiler_protocol_init
  - computed_accessors_order
  - conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - control_statement
  - convenience_type
  - cyclomatic_complexity
  - deployment_target
  - discouraged_direct_init
  - discouraged_optional_boolean
  - discouraged_optional_collection
  - duplicate_enum_cases
  - duplicate_imports
  - dynamic_inline
  - empty_collection_literal
  - empty_count
  - empty_enum_arguments
  - empty_parameters
  - empty_parentheses_with_trailing_closure
  - empty_string
  - empty_xctest_method
  - enum_case_associated_values_count
  - explicit_init
  - fallthrough
  - fatal_error_message
  - file_length
  - first_where
  - flatmap_over_map_reduce
  - for_where
  - force_cast
  - force_try
  - force_unwrapping
  - function_body_length
  - function_default_parameter_at_end
  - function_parameter_count
  - generic_type_name
  - identifier_name
  - implicit_getter
  - implicit_return
  - is_disjoint
  - joined_default_parameter
  - large_tuple
  - last_where
  - leading_whitespace
  - legacy_cggeometry_functions
  - legacy_constant
  - legacy_constructor
  - legacy_hashing
  - legacy_nsgeometry_functions
  - legacy_random
  - line_length
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - mark
  - modifier_order
  - multiline_arguments
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - multiple_closures_with_trailing_closure
  - nesting
  - nimble_operator
  - no_extension_access_modifier
  - no_fallthrough_only
  - no_space_in_method_call
  - notification_center_detachment
  - nsobject_prefer_isequal
  - number_separator
  - object_literal
  - opening_brace
  - operator_usage_whitespace
  - operator_whitespace
  - optional_enum_case_matching
  - orphaned_doc_comment
  - overridden_super_call
  - override_in_extension
  - pattern_matching_keywords
  - prefer_self_type_over_type_of_self
  - prefer_zero_over_explicit_init
  - prefixed_toplevel_constant
  - private_action
  - private_outlet
  - private_over_fileprivate
  - private_unit_test
  - prohibited_super_call
  - protocol_property_accessors_order
  - reduce_boolean
  - reduce_into
  - redundant_discardable_let
  - redundant_nil_coalescing
  - redundant_objc_attribute
  - redundant_optional_initialization
  - redundant_set_access_control
  - redundant_string_enum_value
  - redundant_type_annotation
  - redundant_void_return
  - return_arrow_whitespace
  - self_in_property_initialization
  - shorthand_operator
  - sorted_first_last
  - statement_position
  - static_operator
  - strict_fileprivate
  - superfluous_disable_command
  - switch_case_alignment
  - switch_case_on_newline
  - syntactic_sugar
  - todo
  - toggle_bool
  - trailing_closure
  - trailing_comma
  - trailing_newline
  - trailing_semicolon
  - trailing_whitespace
  - type_body_length
  - type_name
  - unavailable_function
  - unneeded_break_in_switch
  - unneeded_parentheses_in_closure_argument
  - unused_closure_parameter
  - unused_control_flow_label
  - unused_enumerated
  - unused_optional_binding
  - unused_setter_value
  - valid_ibinspectable
  - vertical_parameter_alignment
  - vertical_parameter_alignment_on_call
  - vertical_whitespace
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - void_return
  - weak_delegate
  - xctfail_message
  - yoda_condition
  - custom_rules

# Rule configurations
line_length:
  warning: 120
  error: 150

file_length:
  warning: 400
  error: 500

function_body_length:
  warning: 50
  error: 100

function_parameter_count:
  warning: 5
  error: 8

cyclomatic_complexity:
  warning: 10
  error: 20

type_body_length:
  warning: 300
  error: 400

nesting:
  type_level:
    warning: 2
    error: 3
  function_level:
    warning: 3
    error: 5

identifier_name:
  min_length:
    warning: 2
    error: 1
  max_length:
    warning: 50
    error: 60
  allowed_symbols: ["_"]
  validates_start_with_lowercase: warning

type_name:
  min_length:
    warning: 3
    error: 2
  max_length:
    warning: 50
    error: 60

# Custom rules section (add to only_rules above)
custom_rules:
  # Prefer @MainActor for UI classes
  mainactor_ui_classes:
    name: "MainActor UI Classes"
    regex: "class\\s+\\w*View\\w*(?:\\s*:\\s*[\\w\\s,]+)?\\s*\\{"
    match_kinds:
      - keyword
    message: "UI classes should be marked with @MainActor"
    severity: warning

  # Discourage force unwrapping in production code
  no_force_unwrapping_in_sources:
    name: "No Force Unwrapping"
    regex: "\\!"
    match_kinds:
      - identifier
    included: "Sources/.*\\.swift"
    message: "Avoid force unwrapping in production code. Use optional binding or nil coalescing instead."
    severity: warning

# Analyzer rules for advanced checks
analyzer_rules:
  - explicit_self
  - unused_declaration
  - unused_import

# Reporter type
reporter: "xcode"